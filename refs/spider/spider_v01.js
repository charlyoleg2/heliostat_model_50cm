// Generated by Parametrix

const { polygon } = require('@jscad/modeling').primitives;
//const { subtract } = require('@jscad/modeling').booleans;
//const { union, intersect, scission, subtract } = require('@jscad/modeling').booleans;
const { union, intersect, subtract } = require('@jscad/modeling').booleans;
const { extrudeLinear, extrudeRotate } = require('@jscad/modeling').extrusions;
const { translate, rotate } = require('@jscad/modeling').transforms;

const main = () => {

const ctr_face_fig_spider_faceLegs_Fa000_Ctr000 = polygon({ points: [ [ 2.5000, -1.6583 ],
	[ 2.5000, -8.0000 ],
	[ 34.2132, -8.0000 ],
	[ 35.1887, -8.0961 ],
	[ 36.1266, -8.3806 ],
	[ 36.9911, -8.8427 ],
	[ 37.7487, -9.4645 ],
	[ 70.7107, -42.4264 ],
	[ 67.1751, -45.9619 ],
	[ 34.2132, -13.0000 ],
	[ -34.2132, -13.0000 ],
	[ -67.1751, -45.9619 ],
	[ -70.7107, -42.4264 ],
	[ -37.7487, -9.4645 ],
	[ -36.9911, -8.8427 ],
	[ -36.1266, -8.3806 ],
	[ -35.1887, -8.0961 ],
	[ -34.2132, -8.0000 ],
	[ -2.5000, -8.0000 ],
	[ -2.5000, -1.6583 ],
	[ -2.7751, -1.1396 ],
	[ -2.9440, -0.5772 ],
	[ -3.0000, 0.0073 ],
	[ -2.9411, 0.5916 ],
	[ -2.7695, 1.1531 ],
	[ -2.4919, 1.6705 ],
	[ -2.1187, 2.1239 ],
	[ -1.6644, 2.4959 ],
	[ -1.1464, 2.7723 ],
	[ -0.5844, 2.9425 ],
	[ -0.0000, 3.0000 ],
	[ 0.5844, 2.9425 ],
	[ 1.1464, 2.7723 ],
	[ 1.6644, 2.4959 ],
	[ 2.1187, 2.1239 ],
	[ 2.4919, 1.6705 ],
	[ 2.7695, 1.1531 ],
	[ 2.9411, 0.5916 ],
	[ 3.0000, 0.0073 ],
	[ 2.9440, -0.5772 ],
	[ 2.7751, -1.1396 ],
	[ 2.5000, -1.6583 ] ] });

const ctr_face_fig_spider_faceLegs_Fa000_Ctr001 = polygon({ points: [ [ 1.0000, 0.0000 ],
	[ 0.9808, 0.1951 ],
	[ 0.9239, 0.3827 ],
	[ 0.8315, 0.5556 ],
	[ 0.7071, 0.7071 ],
	[ 0.5556, 0.8315 ],
	[ 0.3827, 0.9239 ],
	[ 0.1951, 0.9808 ],
	[ 0.0000, 1.0000 ],
	[ -0.1951, 0.9808 ],
	[ -0.3827, 0.9239 ],
	[ -0.5556, 0.8315 ],
	[ -0.7071, 0.7071 ],
	[ -0.8315, 0.5556 ],
	[ -0.9239, 0.3827 ],
	[ -0.9808, 0.1951 ],
	[ -1.0000, 0.0000 ],
	[ -0.9808, -0.1951 ],
	[ -0.9239, -0.3827 ],
	[ -0.8315, -0.5556 ],
	[ -0.7071, -0.7071 ],
	[ -0.5556, -0.8315 ],
	[ -0.3827, -0.9239 ],
	[ -0.1951, -0.9808 ],
	[ -0.0000, -1.0000 ],
	[ 0.1951, -0.9808 ],
	[ 0.3827, -0.9239 ],
	[ 0.5556, -0.8315 ],
	[ 0.7071, -0.7071 ],
	[ 0.8315, -0.5556 ],
	[ 0.9239, -0.3827 ],
	[ 0.9808, -0.1951 ],
	[ 1.0000, 0.0000 ] ] });

face_fig_spider_faceLegs_Fa000 = subtract( ctr_face_fig_spider_faceLegs_Fa000_Ctr000, ctr_face_fig_spider_faceLegs_Fa000_Ctr001 );
fig_spider_faceLegs = face_fig_spider_faceLegs_Fa000;
const ctr_face_fig_spider_faceTube_Fa000_Ctr000 = polygon({ points: [ [ 3.0000, 0.0000 ],
	[ 2.9424, 0.5853 ],
	[ 2.7716, 1.1481 ],
	[ 2.4944, 1.6667 ],
	[ 2.1213, 2.1213 ],
	[ 1.6667, 2.4944 ],
	[ 1.1481, 2.7716 ],
	[ 0.5853, 2.9424 ],
	[ 0.0000, 3.0000 ],
	[ -0.5853, 2.9424 ],
	[ -1.1481, 2.7716 ],
	[ -1.6667, 2.4944 ],
	[ -2.1213, 2.1213 ],
	[ -2.4944, 1.6667 ],
	[ -2.7716, 1.1481 ],
	[ -2.9424, 0.5853 ],
	[ -3.0000, 0.0000 ],
	[ -2.9424, -0.5853 ],
	[ -2.7716, -1.1481 ],
	[ -2.4944, -1.6667 ],
	[ -2.1213, -2.1213 ],
	[ -1.6667, -2.4944 ],
	[ -1.1481, -2.7716 ],
	[ -0.5853, -2.9424 ],
	[ -0.0000, -3.0000 ],
	[ 0.5853, -2.9424 ],
	[ 1.1481, -2.7716 ],
	[ 1.6667, -2.4944 ],
	[ 2.1213, -2.1213 ],
	[ 2.4944, -1.6667 ],
	[ 2.7716, -1.1481 ],
	[ 2.9424, -0.5853 ],
	[ 3.0000, 0.0000 ] ] });

const ctr_face_fig_spider_faceTube_Fa000_Ctr001 = polygon({ points: [ [ 1.0000, 0.0000 ],
	[ 0.9808, 0.1951 ],
	[ 0.9239, 0.3827 ],
	[ 0.8315, 0.5556 ],
	[ 0.7071, 0.7071 ],
	[ 0.5556, 0.8315 ],
	[ 0.3827, 0.9239 ],
	[ 0.1951, 0.9808 ],
	[ 0.0000, 1.0000 ],
	[ -0.1951, 0.9808 ],
	[ -0.3827, 0.9239 ],
	[ -0.5556, 0.8315 ],
	[ -0.7071, 0.7071 ],
	[ -0.8315, 0.5556 ],
	[ -0.9239, 0.3827 ],
	[ -0.9808, 0.1951 ],
	[ -1.0000, 0.0000 ],
	[ -0.9808, -0.1951 ],
	[ -0.9239, -0.3827 ],
	[ -0.8315, -0.5556 ],
	[ -0.7071, -0.7071 ],
	[ -0.5556, -0.8315 ],
	[ -0.3827, -0.9239 ],
	[ -0.1951, -0.9808 ],
	[ -0.0000, -1.0000 ],
	[ 0.1951, -0.9808 ],
	[ 0.3827, -0.9239 ],
	[ 0.5556, -0.8315 ],
	[ 0.7071, -0.7071 ],
	[ 0.8315, -0.5556 ],
	[ 0.9239, -0.3827 ],
	[ 0.9808, -0.1951 ],
	[ 1.0000, 0.0000 ] ] });

face_fig_spider_faceTube_Fa000 = subtract( ctr_face_fig_spider_faceTube_Fa000_Ctr000, ctr_face_fig_spider_faceTube_Fa000_Ctr001 );
const ctr_face_fig_spider_faceTube_Fa001_Ctr000 = polygon({ points: [ [ 72.4784, -40.6586 ],
	[ 79.5495, -47.7297 ],
	[ 72.4784, -54.8008 ],
	[ 65.4074, -47.7297 ],
	[ 72.4784, -40.6586 ] ] });

const ctr_face_fig_spider_faceTube_Fa001_Ctr001 = polygon({ points: [ [ 72.4784, -43.4871 ],
	[ 76.7211, -47.7297 ],
	[ 72.4784, -51.9723 ],
	[ 68.2358, -47.7297 ],
	[ 72.4784, -43.4871 ] ] });

face_fig_spider_faceTube_Fa001 = subtract( ctr_face_fig_spider_faceTube_Fa001_Ctr000, ctr_face_fig_spider_faceTube_Fa001_Ctr001 );
const ctr_face_fig_spider_faceTube_Fa002_Ctr000 = polygon({ points: [ [ -72.4784, -40.6586 ],
	[ -65.4074, -47.7297 ],
	[ -72.4784, -54.8008 ],
	[ -79.5495, -47.7297 ],
	[ -72.4784, -40.6586 ] ] });

const ctr_face_fig_spider_faceTube_Fa002_Ctr001 = polygon({ points: [ [ -72.4784, -43.4871 ],
	[ -68.2358, -47.7297 ],
	[ -72.4784, -51.9723 ],
	[ -76.7211, -47.7297 ],
	[ -72.4784, -43.4871 ] ] });

face_fig_spider_faceTube_Fa002 = subtract( ctr_face_fig_spider_faceTube_Fa002_Ctr000, ctr_face_fig_spider_faceTube_Fa002_Ctr001 );
fig_spider_faceTube = union( face_fig_spider_faceTube_Fa000, face_fig_spider_faceTube_Fa001, face_fig_spider_faceTube_Fa002 );
fig_spider_faceBody = undefined;

const subpax_spider_tube =
	translate( [ 0, 0, 0, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 38.4}, fig_spider_faceTube )
		)
	);


const subpax_spider_leg_0 =
	translate( [ 0, 0, 0, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);


const subpax_spider_leg_1 =
	translate( [ 0, 0, 7.552, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);


const subpax_spider_leg_2 =
	translate( [ 0, 0, 15.104, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);


const subpax_spider_leg_3 =
	translate( [ 0, 0, 22.656, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);


const subpax_spider_leg_4 =
	translate( [ 0, 0, 30.208, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);


const subpax_spider_leg_5 =
	translate( [ 0, 0, 37.76, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 0.64}, fig_spider_faceLegs )
		)
	);

const pax_spider = union( subpax_spider_tube, subpax_spider_leg_0, subpax_spider_leg_1, subpax_spider_leg_2, subpax_spider_leg_3, subpax_spider_leg_4, subpax_spider_leg_5 );

return pax_spider;
}
module.exports = { main };
