# freecad-python generated by Parametrix
# run the script with:
# freecad.cmd myScript.py

import FreeCAD as App
import Part

#print(sys.argv)
outFileName = "vaxis"
if (len(sys.argv) == 3):
    outFileName = sys.argv[2]
print(f"outFileName: {outFileName}")

def ctr_face_vaxis_faceCut_Fa0_Ctr0():
	P000 = App.Vector(17.0000, 0.0000, 0)
	P001 = App.Vector(17.0000, 198.0000, 0)
	S000 = Part.LineSegment(P000, P001)
	P002 = App.Vector(15.0000, 198.0000, 0)
	S001 = Part.LineSegment(P001, P002)
	P003 = App.Vector(15.0000, 0.0000, 0)
	S002 = Part.LineSegment(P002, P003)
	P004 = App.Vector(17.0000, 0.0000, 0)
	S003 = Part.LineSegment(P003, P000)
	aShape = Part.Shape([S000, S001, S002, S003])
	aWire = Part.Wire(aShape.Edges)
	subFace = Part.Face(aWire)
	subFace.check()
	return subFace

def face_vaxis_faceCut_Fa0():
	FC000 = ctr_face_vaxis_faceCut_Fa0_Ctr0()
	rOneFace = FC000
	rOneFace.check()
	return rOneFace

def vaxis_faceCut():
	FA000 = face_vaxis_faceCut_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def ctr_face_vaxis_faceBottom_Fa0_Ctr0():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(17.0000, App.Vector(0.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr1():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(11.0000, App.Vector(0.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr2():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(13.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr3():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(12.5570, 3.3646, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr4():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(11.2583, 6.5000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr5():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(9.1924, 9.1924, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr6():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(6.5000, 11.2583, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr7():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(3.3646, 12.5570, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr8():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(0.0000, 13.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr9():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-3.3646, 12.5570, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr10():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-6.5000, 11.2583, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr11():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-9.1924, 9.1924, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr12():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-11.2583, 6.5000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr13():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-12.5570, 3.3646, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr14():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-13.0000, 0.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr15():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-12.5570, -3.3646, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr16():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-11.2583, -6.5000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr17():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-9.1924, -9.1924, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr18():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-6.5000, -11.2583, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr19():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-3.3646, -12.5570, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr20():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(-0.0000, -13.0000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr21():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(3.3646, -12.5570, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr22():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(6.5000, -11.2583, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr23():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(9.1924, -9.1924, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr24():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(11.2583, -6.5000, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def ctr_face_vaxis_faceBottom_Fa0_Ctr25():
	# Radius, XYZ-position, orientation
	aCircle = Part.makeCircle(1.0000, App.Vector(12.5570, -3.3646, 0), App.Vector(0, 0, 1))
	aWire = Part.Wire(aCircle)
	rFace = Part.Face(aWire)
	return rFace

def face_vaxis_faceBottom_Fa0():
	FC000 = ctr_face_vaxis_faceBottom_Fa0_Ctr0()
	FC001 = ctr_face_vaxis_faceBottom_Fa0_Ctr1()
	FC002 = ctr_face_vaxis_faceBottom_Fa0_Ctr2()
	FC003 = ctr_face_vaxis_faceBottom_Fa0_Ctr3()
	FC004 = ctr_face_vaxis_faceBottom_Fa0_Ctr4()
	FC005 = ctr_face_vaxis_faceBottom_Fa0_Ctr5()
	FC006 = ctr_face_vaxis_faceBottom_Fa0_Ctr6()
	FC007 = ctr_face_vaxis_faceBottom_Fa0_Ctr7()
	FC008 = ctr_face_vaxis_faceBottom_Fa0_Ctr8()
	FC009 = ctr_face_vaxis_faceBottom_Fa0_Ctr9()
	FC010 = ctr_face_vaxis_faceBottom_Fa0_Ctr10()
	FC011 = ctr_face_vaxis_faceBottom_Fa0_Ctr11()
	FC012 = ctr_face_vaxis_faceBottom_Fa0_Ctr12()
	FC013 = ctr_face_vaxis_faceBottom_Fa0_Ctr13()
	FC014 = ctr_face_vaxis_faceBottom_Fa0_Ctr14()
	FC015 = ctr_face_vaxis_faceBottom_Fa0_Ctr15()
	FC016 = ctr_face_vaxis_faceBottom_Fa0_Ctr16()
	FC017 = ctr_face_vaxis_faceBottom_Fa0_Ctr17()
	FC018 = ctr_face_vaxis_faceBottom_Fa0_Ctr18()
	FC019 = ctr_face_vaxis_faceBottom_Fa0_Ctr19()
	FC020 = ctr_face_vaxis_faceBottom_Fa0_Ctr20()
	FC021 = ctr_face_vaxis_faceBottom_Fa0_Ctr21()
	FC022 = ctr_face_vaxis_faceBottom_Fa0_Ctr22()
	FC023 = ctr_face_vaxis_faceBottom_Fa0_Ctr23()
	FC024 = ctr_face_vaxis_faceBottom_Fa0_Ctr24()
	FC025 = ctr_face_vaxis_faceBottom_Fa0_Ctr25()
	rOneFace = FC000.cut([FC001, FC002, FC003, FC004, FC005, FC006, FC007, FC008, FC009, FC010, FC011, FC012, FC013, FC014, FC015, FC016, FC017, FC018, FC019, FC020, FC021, FC022, FC023, FC024, FC025])
	rOneFace.check()
	return rOneFace

def vaxis_faceBottom():
	FA000 = face_vaxis_faceBottom_Fa0()
	rOneFig = FA000
	rOneFig.check()
	return rOneFig

def fex_subpax_vaxis_pole():
	FIG = vaxis_faceCut()
	VEX = FIG.revolve(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 360).rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 90)
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 0.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_vaxis_pole = fex_subpax_vaxis_pole()

def fex_subpax_vaxis_bottom():
	FIG = vaxis_faceBottom()
	VEX = FIG.extrude(App.Vector(0, 0, 2))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 0.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 0.0000))
	return VFP
subpax_vaxis_bottom = fex_subpax_vaxis_bottom()

def fex_subpax_vaxis_top():
	FIG = vaxis_faceBottom()
	VEX = FIG.extrude(App.Vector(0, 0, 2))
	VR1 = VEX.rotate(App.Vector(0, 0, 0), App.Vector(1, 0, 0), 0.0000)
	VR2 = VR1.rotate(App.Vector(0, 0, 0), App.Vector(0, 1, 0), 0.0000)
	VR3 = VR2.rotate(App.Vector(0, 0, 0), App.Vector(0, 0, 1), 0.0000)
	VFP = VR3.translate(App.Vector(0.0000, 0.0000, 196.0000))
	return VFP
subpax_vaxis_top = fex_subpax_vaxis_top()

pax_vaxis = subpax_vaxis_pole.fuse([subpax_vaxis_bottom, subpax_vaxis_top])

pax_vaxis.check()
#pax_vaxis.exportBrep(f"{outFileName}.brep")
#pax_vaxis.exportIges(f"{outFileName}.igs")
#pax_vaxis.exportStep(f"{outFileName}.stp")
pax_vaxis.exportStl(f"{outFileName}.stl")

